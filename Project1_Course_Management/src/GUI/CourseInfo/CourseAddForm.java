/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package GUI.CourseInfo;

import BLL.CourseBLL;
import BLL.DepartmentBLL;
import BLL.OnlineCourseBLL;
import BLL.OnsiteCourseBLL;
import BLL.PersonBLL;
import BLL.StudentGradeBLL;
import BLL.CourseInstructorBLL;
import DTO.CourseDTO;
import DTO.CourseInstructorDTO;
import DTO.DepartmentDTO;
import DTO.OnlineCourseDTO;
import DTO.OnsiteCourseDTO;
import DTO.PersonDTO;
import DTO.StudentGradeDTO;
import java.awt.Color;
import java.awt.Component;
import java.sql.SQLException;
import java.sql.Time;
import java.sql.Timestamp;
import java.time.LocalTime;
import java.util.ArrayList;
import javax.swing.JPanel;
import java.util.List;
import javax.swing.JTable;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableCellRenderer;
import util.SharedFunction;

/**
 *
 * @author ASUS
 */
public class CourseAddForm extends javax.swing.JFrame {

    private final DepartmentBLL departmentBLL = new DepartmentBLL();
    private final PersonBLL personBLL = new PersonBLL();
    private final CourseBLL courseBLL = new CourseBLL();
    private final OnlineCourseBLL onlineCourseBLL = new OnlineCourseBLL();
    private final OnsiteCourseBLL onsiteCourseBLL = new OnsiteCourseBLL();
    private final StudentGradeBLL studentGradeBLL = new StudentGradeBLL();
    private final CourseInstructorBLL courseInstrutorBLL = new CourseInstructorBLL();
    private List<DepartmentDTO> listDepartment = new ArrayList<>();
    private List<PersonDTO> listStudent = new ArrayList<>();
    private List<PersonDTO> listInstructor = new ArrayList<>();
    private CoursePanel coursePanel;

    /**
     * Creates new form CourseAddForm
     */
    public CourseAddForm(CoursePanel coursePanel) {
        this.coursePanel = coursePanel;
        initComponents();
        loadDepartmentName();
        loadDataTblStudent();
        loadDataTblSInstructor();
    }

    private void loadDepartmentName() {
        listDepartment = departmentBLL.selectAll();
        for (DepartmentDTO departmentDTO : listDepartment)
        {
            String name = departmentDTO.getName();
            cbDepartment.addItem(name);
        }
    }

    private void loadDataTblStudent() {
        listStudent = personBLL.getListStudent();

        DefaultTableModel model = (DefaultTableModel) tblStudent.getModel();
        model.setRowCount(0);

        int STT = 1;
        for (PersonDTO student : listStudent)
        {
            int personID = student.getPersonID();
            String firstname = student.getFirstName();
            String lastname = student.getLastName();
            Timestamp enrollmentDate = student.getEnrollmentDate();

            Object[] row =
            {
                STT++, personID, firstname, lastname, enrollmentDate
            };

            model.addRow(row);
        }
        model.fireTableDataChanged();
    }

    private void loadDataTblSInstructor() {
        listInstructor = personBLL.getListInstructor();

        DefaultTableModel model = (DefaultTableModel) tblInstructor.getModel();
        model.setRowCount(0);

        int STT = 1;
        for (PersonDTO instructor : listInstructor)
        {
            int personID = instructor.getPersonID();
            String firstname = instructor.getFirstName();
            String lastname = instructor.getLastName();
            Timestamp hireDate = instructor.getHireDate();

            Object[] row =
            {
                STT++, personID, firstname, lastname, hireDate
            };

            model.addRow(row);
        }
        model.fireTableDataChanged();
    }

    public JPanel getOnlineInformationCourse() {
        return onlineInformationCourse;
    }

    public void setOnlineInformationCourse(JPanel onlineInformationCourse) {
        this.onlineInformationCourse = onlineInformationCourse;
    }

    public JPanel getOnsiteInformationCourse() {
        return onsiteInformationCourse;
    }

    public void setoOnsiteInformationCourse(JPanel onsiteInformationCourse) {
        this.onsiteInformationCourse = onsiteInformationCourse;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jPanel1 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        txtTitle = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtCredits = new javax.swing.JTextField();
        jPanel5 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        cbDepartment = new javax.swing.JComboBox<>();
        jPanel4 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        txtType = new javax.swing.JComboBox<>();
        onlineInformationCourse = new javax.swing.JPanel();
        jPanel6 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        txtUrl = new javax.swing.JTextField();
        onsiteInformationCourse = new javax.swing.JPanel();
        jPanel8 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        txtLocation = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        tpTime = new com.github.lgooddatepicker.components.TimePicker();
        jPanel9 = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        jPanel10 = new javax.swing.JPanel();
        txtMonday = new javax.swing.JCheckBox();
        txtTuesday = new javax.swing.JCheckBox();
        txtWednesday = new javax.swing.JCheckBox();
        txtThursday = new javax.swing.JCheckBox();
        txtFriday = new javax.swing.JCheckBox();
        txtSaturday = new javax.swing.JCheckBox();
        jPanel7 = new javax.swing.JPanel();
        btnCancel = new javax.swing.JButton();
        btnSave = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jPanel13 = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        pnlAddStudent = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblStudent = new javax.swing.JTable();
        jPanel14 = new javax.swing.JPanel();
        btnSelectStudent = new javax.swing.JButton();
        btnUnselectStudent = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        tblStudentSelected = new javax.swing.JTable();
        jLabel9 = new javax.swing.JLabel();
        pnlAddTeacher = new javax.swing.JPanel();
        jScrollPane5 = new javax.swing.JScrollPane();
        tblInstructor = new javax.swing.JTable();
        jPanel12 = new javax.swing.JPanel();
        btnSelectInstructor = new javax.swing.JButton();
        btnUnselectInstructor = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        tblInstructorSelected = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Thêm khóa học");
        setBackground(new java.awt.Color(255, 255, 255));
        setResizable(false);

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createEmptyBorder(10, 10, 10, 10));

        jLabel1.setText("THÊM KHÓA HỌC");
        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jLabel1)
                .addGap(0, 0, Short.MAX_VALUE))
            .addComponent(jSeparator1)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createEmptyBorder(10, 10, 10, 10));

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));
        jPanel3.setPreferredSize(new java.awt.Dimension(801, 53));
        java.awt.FlowLayout flowLayout1 = new java.awt.FlowLayout(java.awt.FlowLayout.LEFT);
        flowLayout1.setAlignOnBaseline(true);
        jPanel3.setLayout(flowLayout1);

        jLabel2.setText("Tên khóa học:");
        jLabel2.setPreferredSize(new java.awt.Dimension(85, 35));
        jPanel3.add(jLabel2);

        txtTitle.setPreferredSize(new java.awt.Dimension(200, 35));
        jPanel3.add(txtTitle);

        jLabel3.setText("Tín chỉ:");
        jLabel3.setPreferredSize(new java.awt.Dimension(38, 35));
        jPanel3.add(jLabel3);

        txtCredits.setPreferredSize(new java.awt.Dimension(153, 35));
        jPanel3.add(txtCredits);

        jPanel5.setBackground(new java.awt.Color(255, 255, 255));
        jPanel5.setPreferredSize(new java.awt.Dimension(342, 47));
        java.awt.FlowLayout flowLayout2 = new java.awt.FlowLayout(java.awt.FlowLayout.LEFT);
        flowLayout2.setAlignOnBaseline(true);
        jPanel5.setLayout(flowLayout2);

        jLabel4.setText("Phòng nhân sự:");
        jLabel4.setPreferredSize(new java.awt.Dimension(85, 35));
        jPanel5.add(jLabel4);

        cbDepartment.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "--Chọn Khoa--" }));
        cbDepartment.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(206, 206, 206)));
        cbDepartment.setPreferredSize(new java.awt.Dimension(400, 35));
        jPanel5.add(cbDepartment);

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));
        jPanel4.setPreferredSize(new java.awt.Dimension(800, 47));
        java.awt.FlowLayout flowLayout3 = new java.awt.FlowLayout(java.awt.FlowLayout.LEFT);
        flowLayout3.setAlignOnBaseline(true);
        jPanel4.setLayout(flowLayout3);

        jLabel5.setText("Loại khóa học:");
        jLabel5.setPreferredSize(new java.awt.Dimension(85, 35));
        jPanel4.add(jLabel5);

        txtType.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Online", "Onsite" }));
        txtType.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(206, 206, 206)));
        txtType.setPreferredSize(new java.awt.Dimension(400, 35));
        txtType.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTypeActionPerformed(evt);
            }
        });
        jPanel4.add(txtType);

        onlineInformationCourse.setBackground(new java.awt.Color(255, 255, 255));
        onlineInformationCourse.setPreferredSize(new java.awt.Dimension(753, 50));

        jPanel6.setBackground(new java.awt.Color(255, 255, 255));
        java.awt.FlowLayout flowLayout4 = new java.awt.FlowLayout(java.awt.FlowLayout.LEFT);
        flowLayout4.setAlignOnBaseline(true);
        jPanel6.setLayout(flowLayout4);

        jLabel6.setText("URL:");
        jLabel6.setPreferredSize(new java.awt.Dimension(85, 35));
        jPanel6.add(jLabel6);

        txtUrl.setPreferredSize(new java.awt.Dimension(910, 35));
        jPanel6.add(txtUrl);

        javax.swing.GroupLayout onlineInformationCourseLayout = new javax.swing.GroupLayout(onlineInformationCourse);
        onlineInformationCourse.setLayout(onlineInformationCourseLayout);
        onlineInformationCourseLayout.setHorizontalGroup(
            onlineInformationCourseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, 1130, Short.MAX_VALUE)
        );
        onlineInformationCourseLayout.setVerticalGroup(
            onlineInformationCourseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel6, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        onsiteInformationCourse.setBackground(new java.awt.Color(255, 255, 255));
        onsiteInformationCourse.setPreferredSize(new java.awt.Dimension(753, 130));
        java.awt.FlowLayout flowLayout10 = new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 0, 0);
        flowLayout10.setAlignOnBaseline(true);
        onsiteInformationCourse.setLayout(flowLayout10);

        jPanel8.setBackground(new java.awt.Color(255, 255, 255));
        jPanel8.setPreferredSize(new java.awt.Dimension(500, 47));
        java.awt.FlowLayout flowLayout5 = new java.awt.FlowLayout(java.awt.FlowLayout.LEFT);
        flowLayout5.setAlignOnBaseline(true);
        jPanel8.setLayout(flowLayout5);

        jLabel7.setText("Địa chỉ:");
        jLabel7.setPreferredSize(new java.awt.Dimension(85, 35));
        jPanel8.add(jLabel7);

        txtLocation.setPreferredSize(new java.awt.Dimension(200, 35));
        txtLocation.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtLocationActionPerformed(evt);
            }
        });
        jPanel8.add(txtLocation);

        jLabel8.setText("Thời gian:");
        jLabel8.setPreferredSize(new java.awt.Dimension(52, 35));
        jPanel8.add(jLabel8);

        tpTime.setPreferredSize(new java.awt.Dimension(140, 35));
        jPanel8.add(tpTime);

        onsiteInformationCourse.add(jPanel8);

        jPanel9.setBackground(new java.awt.Color(255, 255, 255));
        jPanel9.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 15, 0, 0));
        jPanel9.setPreferredSize(new java.awt.Dimension(550, 47));
        java.awt.FlowLayout flowLayout7 = new java.awt.FlowLayout(java.awt.FlowLayout.LEFT);
        flowLayout7.setAlignOnBaseline(true);
        jPanel9.setLayout(flowLayout7);

        jLabel10.setText("Ngày:");
        jLabel10.setPreferredSize(new java.awt.Dimension(40, 35));
        jPanel9.add(jLabel10);

        jPanel10.setBackground(new java.awt.Color(255, 255, 255));
        jPanel10.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(206, 206, 206)));
        jPanel10.setPreferredSize(new java.awt.Dimension(440, 35));
        java.awt.FlowLayout flowLayout8 = new java.awt.FlowLayout(java.awt.FlowLayout.LEFT);
        flowLayout8.setAlignOnBaseline(true);
        jPanel10.setLayout(flowLayout8);

        txtMonday.setText("Thứ 2");
        txtMonday.setPreferredSize(new java.awt.Dimension(65, 25));
        jPanel10.add(txtMonday);

        txtTuesday.setText("Thứ 3");
        txtTuesday.setPreferredSize(new java.awt.Dimension(65, 25));
        jPanel10.add(txtTuesday);

        txtWednesday.setText("Thứ 4");
        txtWednesday.setPreferredSize(new java.awt.Dimension(65, 25));
        jPanel10.add(txtWednesday);

        txtThursday.setText("Thứ 5");
        txtThursday.setPreferredSize(new java.awt.Dimension(65, 25));
        jPanel10.add(txtThursday);

        txtFriday.setText("Thứ 6");
        txtFriday.setPreferredSize(new java.awt.Dimension(65, 25));
        jPanel10.add(txtFriday);

        txtSaturday.setText("Thứ 7");
        txtSaturday.setPreferredSize(new java.awt.Dimension(65, 25));
        jPanel10.add(txtSaturday);

        jPanel9.add(jPanel10);

        onsiteInformationCourse.add(jPanel9);

        jPanel7.setBackground(new java.awt.Color(255, 255, 255));
        jPanel7.setBorder(javax.swing.BorderFactory.createEmptyBorder(10, 0, 10, 0));
        java.awt.FlowLayout flowLayout9 = new java.awt.FlowLayout(java.awt.FlowLayout.RIGHT);
        flowLayout9.setAlignOnBaseline(true);
        jPanel7.setLayout(flowLayout9);

        btnCancel.setText("Đóng");
        btnCancel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        btnCancel.setPreferredSize(new java.awt.Dimension(100, 35));
        btnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelActionPerformed(evt);
            }
        });
        jPanel7.add(btnCancel);

        btnSave.setText("Lưu");
        btnSave.setBackground(new java.awt.Color(95, 208, 104));
        btnSave.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(75, 134, 115)));
        btnSave.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnSave.setForeground(new java.awt.Color(255, 255, 255));
        btnSave.setPreferredSize(new java.awt.Dimension(100, 35));
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });
        jPanel7.add(btnSave);

        jScrollPane2.setBackground(new java.awt.Color(255, 255, 255));
        jScrollPane2.setBorder(null);
        jScrollPane2.getVerticalScrollBar().setUnitIncrement(16);

        jPanel13.setBackground(new java.awt.Color(255, 255, 255));

        jLabel11.setText("Thêm sinh viên:");
        jLabel11.setBackground(new java.awt.Color(255, 255, 255));
        jLabel11.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel11.setOpaque(true);

        pnlAddStudent.setBackground(new java.awt.Color(255, 255, 255));
        java.awt.FlowLayout flowLayout11 = new java.awt.FlowLayout();
        flowLayout11.setAlignOnBaseline(true);
        pnlAddStudent.setLayout(flowLayout11);

        jScrollPane1.setPreferredSize(new java.awt.Dimension(455, 280));

        tblStudent.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "No", "ID", "First Name", "Last Name", "Enrollment Date"
            }
        ));
        tblStudent.setMaximumSize(new java.awt.Dimension(2147483647, 2147483647));
        tblStudent.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(tblStudent);
        if (tblStudent.getColumnModel().getColumnCount() > 0) {
            tblStudent.getColumnModel().getColumn(0).setMinWidth(50);
            tblStudent.getColumnModel().getColumn(0).setMaxWidth(50);
            tblStudent.getColumnModel().getColumn(0).setHeaderValue("No");
            tblStudent.getColumnModel().getColumn(1).setMinWidth(70);
            tblStudent.getColumnModel().getColumn(1).setMaxWidth(70);
            tblStudent.getColumnModel().getColumn(1).setHeaderValue("ID");
            tblStudent.getColumnModel().getColumn(2).setHeaderValue("First Name");
            tblStudent.getColumnModel().getColumn(3).setHeaderValue("Last Name");
            tblStudent.getColumnModel().getColumn(4).setHeaderValue("Enrollment Date");
        }

        pnlAddStudent.add(jScrollPane1);

        jPanel14.setBackground(new java.awt.Color(255, 255, 255));
        jPanel14.setPreferredSize(new java.awt.Dimension(100, 280));
        java.awt.GridBagLayout jPanel14Layout = new java.awt.GridBagLayout();
        jPanel14Layout.columnWidths = new int[] {0, 0, 0};
        jPanel14Layout.rowHeights = new int[] {0, 10, 0};
        jPanel14.setLayout(jPanel14Layout);

        btnSelectStudent.setText("Thêm > >");
        btnSelectStudent.setBackground(new java.awt.Color(101, 183, 65));
        btnSelectStudent.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(206, 206, 206)));
        btnSelectStudent.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnSelectStudent.setForeground(new java.awt.Color(255, 255, 255));
        btnSelectStudent.setPreferredSize(new java.awt.Dimension(100, 35));
        btnSelectStudent.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSelectStudentActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        jPanel14.add(btnSelectStudent, gridBagConstraints);

        btnUnselectStudent.setText("< < Xóa ");
        btnUnselectStudent.setBackground(new java.awt.Color(244, 80, 80));
        btnUnselectStudent.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(206, 206, 206)));
        btnUnselectStudent.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnUnselectStudent.setForeground(new java.awt.Color(255, 255, 255));
        btnUnselectStudent.setPreferredSize(new java.awt.Dimension(100, 35));
        btnUnselectStudent.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUnselectStudentActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        jPanel14.add(btnUnselectStudent, gridBagConstraints);

        pnlAddStudent.add(jPanel14);

        jScrollPane4.setPreferredSize(new java.awt.Dimension(455, 280));

        tblStudentSelected.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "No", "ID", "First Name", "Last Name", "Enrollment Date"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, true, false, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblStudentSelected.getTableHeader().setReorderingAllowed(false);
        jScrollPane4.setViewportView(tblStudentSelected);
        if (tblStudentSelected.getColumnModel().getColumnCount() > 0) {
            tblStudentSelected.getColumnModel().getColumn(0).setMinWidth(50);
            tblStudentSelected.getColumnModel().getColumn(0).setMaxWidth(50);
            tblStudentSelected.getColumnModel().getColumn(1).setMinWidth(70);
            tblStudentSelected.getColumnModel().getColumn(1).setMaxWidth(70);
        }

        pnlAddStudent.add(jScrollPane4);

        jLabel9.setText("Thêm giảng viên:");
        jLabel9.setBackground(new java.awt.Color(255, 255, 255));
        jLabel9.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel9.setOpaque(true);

        pnlAddTeacher.setBackground(new java.awt.Color(255, 255, 255));
        java.awt.FlowLayout flowLayout6 = new java.awt.FlowLayout();
        flowLayout6.setAlignOnBaseline(true);
        pnlAddTeacher.setLayout(flowLayout6);

        jScrollPane5.setPreferredSize(new java.awt.Dimension(455, 280));
        jScrollPane5.setRequestFocusEnabled(false);

        tblInstructor.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "No", "ID", "First Name", "Last Name", "Hire Date"
            }
        ));
        tblInstructor.setMaximumSize(new java.awt.Dimension(2147483647, 2147483647));
        tblInstructor.getTableHeader().setReorderingAllowed(false);
        jScrollPane5.setViewportView(tblInstructor);
        if (tblInstructor.getColumnModel().getColumnCount() > 0) {
            tblInstructor.getColumnModel().getColumn(0).setMinWidth(50);
            tblInstructor.getColumnModel().getColumn(0).setMaxWidth(50);
            tblInstructor.getColumnModel().getColumn(1).setMinWidth(70);
            tblInstructor.getColumnModel().getColumn(1).setMaxWidth(70);
        }

        pnlAddTeacher.add(jScrollPane5);

        jPanel12.setBackground(new java.awt.Color(255, 255, 255));
        jPanel12.setPreferredSize(new java.awt.Dimension(100, 280));
        java.awt.GridBagLayout jPanel12Layout = new java.awt.GridBagLayout();
        jPanel12Layout.columnWidths = new int[] {0};
        jPanel12Layout.rowHeights = new int[] {0, 10, 0};
        jPanel12.setLayout(jPanel12Layout);

        btnSelectInstructor.setText("Thêm > >");
        btnSelectInstructor.setBackground(new java.awt.Color(101, 183, 65));
        btnSelectInstructor.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(206, 206, 206)));
        btnSelectInstructor.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnSelectInstructor.setForeground(new java.awt.Color(255, 255, 255));
        btnSelectInstructor.setMargin(new java.awt.Insets(10, 10, 10, 10));
        btnSelectInstructor.setPreferredSize(new java.awt.Dimension(100, 35));
        btnSelectInstructor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSelectInstructorActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        jPanel12.add(btnSelectInstructor, gridBagConstraints);

        btnUnselectInstructor.setText("< < Xóa");
        btnUnselectInstructor.setBackground(new java.awt.Color(244, 80, 80));
        btnUnselectInstructor.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnUnselectInstructor.setForeground(new java.awt.Color(255, 255, 255));
        btnUnselectInstructor.setMaximumSize(new java.awt.Dimension(67, 22));
        btnUnselectInstructor.setMinimumSize(new java.awt.Dimension(67, 22));
        btnUnselectInstructor.setPreferredSize(new java.awt.Dimension(100, 35));
        btnUnselectInstructor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUnselectInstructorActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        jPanel12.add(btnUnselectInstructor, gridBagConstraints);

        pnlAddTeacher.add(jPanel12);

        jScrollPane3.setPreferredSize(new java.awt.Dimension(455, 280));

        tblInstructorSelected.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "No", "ID", "First Name", "Last Name", "Hire Date"
            }
        ));
        jScrollPane3.setViewportView(tblInstructorSelected);
        if (tblInstructorSelected.getColumnModel().getColumnCount() > 0) {
            tblInstructorSelected.getColumnModel().getColumn(0).setMinWidth(50);
            tblInstructorSelected.getColumnModel().getColumn(0).setMaxWidth(50);
            tblInstructorSelected.getColumnModel().getColumn(1).setMinWidth(70);
            tblInstructorSelected.getColumnModel().getColumn(1).setMaxWidth(70);
        }

        pnlAddTeacher.add(jScrollPane3);

        javax.swing.GroupLayout jPanel13Layout = new javax.swing.GroupLayout(jPanel13);
        jPanel13.setLayout(jPanel13Layout);
        jPanel13Layout.setHorizontalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel13Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pnlAddTeacher, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 1102, Short.MAX_VALUE)
                    .addComponent(pnlAddStudent, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel13Layout.setVerticalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel13Layout.createSequentialGroup()
                .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(pnlAddStudent, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(pnlAddTeacher, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jScrollPane2.setViewportView(jPanel13);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(onsiteInformationCourse, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(onlineInformationCourse, javax.swing.GroupLayout.DEFAULT_SIZE, 1130, Short.MAX_VALUE)
            .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, 505, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 1124, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(onlineInformationCourse, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(onsiteInformationCourse, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 357, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void txtTypeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTypeActionPerformed
        if (txtType.getSelectedItem() == "Online")
        {
            onlineInformationCourse.setVisible(true);
            onsiteInformationCourse.setVisible(false);
        } else
        {
            onlineInformationCourse.setVisible(false);
            onsiteInformationCourse.setVisible(true);
        }
    }//GEN-LAST:event_txtTypeActionPerformed

    private void txtLocationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtLocationActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtLocationActionPerformed

    private void btnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelActionPerformed
        this.dispose();
    }//GEN-LAST:event_btnCancelActionPerformed

    private void btnSelectInstructorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSelectInstructorActionPerformed
        // TODO add your handling code here:
        selectPerson(tblInstructor, tblInstructorSelected);
    }//GEN-LAST:event_btnSelectInstructorActionPerformed

    private void btnSelectStudentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSelectStudentActionPerformed
        // TODO add your handling code here:
        selectPerson(tblStudent, tblStudentSelected);
    }//GEN-LAST:event_btnSelectStudentActionPerformed

    private void btnUnselectStudentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUnselectStudentActionPerformed
        // TODO add your handling code here:
        unselectedPerson(tblStudentSelected);
    }//GEN-LAST:event_btnUnselectStudentActionPerformed

    private void btnUnselectInstructorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUnselectInstructorActionPerformed
        // TODO add your handling code here:
        unselectedPerson(tblInstructorSelected);
    }//GEN-LAST:event_btnUnselectInstructorActionPerformed

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        // TODO add your handling code here:
        // get data course
        String title = txtTitle.getText();
        int credits = Integer.parseInt(txtCredits.getText());
        int departmentIndex = cbDepartment.getSelectedIndex();
        int departmentID = listDepartment.get(departmentIndex - 1).getDepartmentID();

        boolean success = false;
        CourseDTO course = new CourseDTO(0, departmentID, credits, title);
        success = courseBLL.insertCourse(course);
        if (success) // if insert course successfully
        {
            success = false;
            int courseID = courseBLL.selectLastID();
            // insert online or onsite course
            String course_type = txtType.getSelectedItem().toString();
            switch (course_type)
            {
                case "Online" ->
                {
                    String url = txtUrl.getText();
                    OnlineCourseDTO onlineCourse = new OnlineCourseDTO(url, courseID, departmentID, credits, title);
                    success = onlineCourseBLL.insertOnlineCourse(onlineCourse);
                }
                case "Onsite" ->
                {
                    String location = txtLocation.getText();
                    LocalTime localtime = tpTime.getTime();
                    Time time = Time.valueOf(localtime);
                    String Days = "";
                    if (txtMonday.isSelected())
                    {
                        Days += "M";
                    }
                    if (txtTuesday.isSelected())
                    {
                        Days += "T";
                    }
                    if (txtWednesday.isSelected())
                    {
                        Days += "W";
                    }
                    if (txtThursday.isSelected())
                    {
                        Days += "H";
                    }
                    if (txtFriday.isSelected())
                    {
                        Days += "F";
                    }
                    if (txtSaturday.isSelected())
                    {
                        Days += "S";
                    }
                    OnsiteCourseDTO onsiteCourse = new OnsiteCourseDTO(location, Days, time, courseID, departmentID, credits, title);
                    success = onsiteCourseBLL.insertOnsiteCourse(onsiteCourse);
                }
                default ->
                    throw new AssertionError();
            }
            
            // insert student to new course
             int studentTotal = tblStudentSelected.getRowCount();
             for(int i = 0; i < studentTotal; ++i) {
                 int currentStudentID = Integer.parseInt(tblStudentSelected.getValueAt(i, 1).toString());
                 StudentGradeDTO student = new StudentGradeDTO(1, currentStudentID, courseID, null);
                 studentGradeBLL.insertStudent(student);
             }
             
             // insert instructor to new course
             int instructorTotal = tblInstructorSelected.getRowCount();
             for(int i = 0; i < instructorTotal; ++i) {
                 int currentInstructorID = Integer.parseInt(tblStudentSelected.getValueAt(i, 1).toString());
                 CourseInstructorDTO instructor = new CourseInstructorDTO(courseID, currentInstructorID);
                 try
                 {
                      courseInstrutorBLL.insertCourseInstructor(instructor);
                 } catch (SQLException e)
                 {
                     e.printStackTrace();
                 }
                 
             }
            if (success)
            {
                coursePanel.loadData();
                SharedFunction.displayConfirmMessage("Insert course successfully!!");
                this.dispose();
            }
        }

    }//GEN-LAST:event_btnSaveActionPerformed

    private void selectPerson(JTable availaibleTable, JTable selectedTable) {
        int selectedRow = availaibleTable.getSelectedRow();
        if (selectedRow == -1)
        {
            SharedFunction.displayErrorMessage("Please select a row !!");
        } else
        {
            DefaultTableModel model = (DefaultTableModel) selectedTable.getModel();
            int STT = model.getRowCount() + 1;

            // change color
            // get data from selected row
            Object ID = availaibleTable.getValueAt(selectedRow, 1);
            Object firstname = availaibleTable.getValueAt(selectedRow, 2);
            Object lastname = availaibleTable.getValueAt(selectedRow, 3);
            Object date = availaibleTable.getValueAt(selectedRow, 4);

            Object[] selectedData =
            {
                STT, ID, firstname, lastname, date
            };

            // check existed
            for (int i = 0; i < model.getRowCount(); i++)
            {
                Object existedID = model.getValueAt(i, 1);
                if (existedID == ID)
                {
                    SharedFunction.displayErrorMessage("Object has existed");
                    return;
                }
            }

            model.addRow(selectedData);
            model.fireTableDataChanged();
        }
    }

    private void unselectedPerson(JTable selectedTable) {
        int selectedRow = selectedTable.getSelectedRow();
        if (selectedRow == -1)
        {
            SharedFunction.displayErrorMessage("Please select a row !!");
        } else
        {
            DefaultTableModel model = (DefaultTableModel) selectedTable.getModel();

            model.removeRow(selectedRow);

            // reset No.
            int STT = 1;
            for (int i = 0; i < model.getRowCount(); i++)
            {
                model.setValueAt(STT++, i, 0);
            }
            model.fireTableDataChanged();

        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try
        {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels())
            {
                if ("Nimbus".equals(info.getName()))
                {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex)
        {
            java.util.logging.Logger.getLogger(CourseAddForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex)
        {
            java.util.logging.Logger.getLogger(CourseAddForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex)
        {
            java.util.logging.Logger.getLogger(CourseAddForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex)
        {
            java.util.logging.Logger.getLogger(CourseAddForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
//                new CourseAddForm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancel;
    private javax.swing.JButton btnSave;
    private javax.swing.JButton btnSelectInstructor;
    private javax.swing.JButton btnSelectStudent;
    private javax.swing.JButton btnUnselectInstructor;
    private javax.swing.JButton btnUnselectStudent;
    private javax.swing.JComboBox<String> cbDepartment;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel14;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JPanel onlineInformationCourse;
    private javax.swing.JPanel onsiteInformationCourse;
    private javax.swing.JPanel pnlAddStudent;
    private javax.swing.JPanel pnlAddTeacher;
    private javax.swing.JTable tblInstructor;
    private javax.swing.JTable tblInstructorSelected;
    private javax.swing.JTable tblStudent;
    private javax.swing.JTable tblStudentSelected;
    private com.github.lgooddatepicker.components.TimePicker tpTime;
    private javax.swing.JTextField txtCredits;
    private javax.swing.JCheckBox txtFriday;
    private javax.swing.JTextField txtLocation;
    private javax.swing.JCheckBox txtMonday;
    private javax.swing.JCheckBox txtSaturday;
    private javax.swing.JCheckBox txtThursday;
    private javax.swing.JTextField txtTitle;
    private javax.swing.JCheckBox txtTuesday;
    private javax.swing.JComboBox<String> txtType;
    private javax.swing.JTextField txtUrl;
    private javax.swing.JCheckBox txtWednesday;
    // End of variables declaration//GEN-END:variables
}
