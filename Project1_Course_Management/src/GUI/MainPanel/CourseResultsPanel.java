/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package GUI.MainPanel;

import BLL.CourseBLL;
import DTO.CourseDTO;
import GUI.CourseResultJFrame.JFrameManageCourseResults;
import java.util.Vector;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JFrame;
import javax.swing.RowFilter;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;

/**
 *
 * @author MSI
 */
public class CourseResultsPanel extends javax.swing.JPanel {
    CourseBLL courseBLL=new CourseBLL();
    /**
     * Creates new form PanelKhoaHocOnline
     */
    public CourseResultsPanel() {
        initComponents();
        LoadData();
        LoadDataCourse();
        jButtonClearSearch.setVisible(false);
        jSearch.getDocument().addDocumentListener(new DocumentListener() {
        @Override
        public void insertUpdate(DocumentEvent e) {
              SearchAll();
        }

        @Override
        public void removeUpdate(DocumentEvent e) {
              SearchAll();
        }

        @Override
        public void changedUpdate(DocumentEvent e) {
        // Xử lý khi có sự thay đổi trong thuộc tính của văn bản
        // (chẳng hạn như một loại thuộc tính được thay đổi, nhưng không phải nội dung văn bản)
        }
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTableCourse = new javax.swing.JTable();
        jSearch = new javax.swing.JTextField();
        jButtonClearSearch = new javax.swing.JButton();
        jComboBoxCourse = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));
        setPreferredSize(new java.awt.Dimension(838, 629));

        jTableCourse.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "CourseID", "Title"
            }
        ));
        jTableCourse.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableCourseMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTableCourse);

        jSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jSearchActionPerformed(evt);
            }
        });
        jSearch.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jSearchKeyReleased(evt);
            }
        });

        jButtonClearSearch.setText("X");
        jButtonClearSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonClearSearchActionPerformed(evt);
            }
        });

        jComboBoxCourse.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jComboBoxCourse.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jComboBoxCourseMouseClicked(evt);
            }
        });
        jComboBoxCourse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxCourseActionPerformed(evt);
            }
        });

        jLabel1.setText("Course");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 838, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(254, 254, 254)
                        .addComponent(jSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonClearSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel1)
                        .addGap(18, 18, 18)
                        .addComponent(jComboBoxCourse, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonClearSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(23, 23, 23)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBoxCourse, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 340, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jTableCourseMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableCourseMouseClicked
        // TODO add your handling code here:
        if(evt.getClickCount() > 1) {
            int n=jTableCourse.getSelectedRow();
            JFrameManageCourseResults onlineCourse=new JFrameManageCourseResults(Integer.parseInt(jTableCourse.getValueAt(n,0).toString()),jTableCourse.getValueAt(n,1).toString());
            onlineCourse.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
            onlineCourse.setLocationRelativeTo(null);
            onlineCourse.setVisible(true);
            jTableCourse.clearSelection();
        }
    }//GEN-LAST:event_jTableCourseMouseClicked

    private void jSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jSearchActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jSearchActionPerformed

    private void jButtonClearSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonClearSearchActionPerformed
        // TODO add your handling code here:
        jSearch.setText("");
        LoadData();
    }//GEN-LAST:event_jButtonClearSearchActionPerformed

    private void jSearchKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jSearchKeyReleased
        // TODO add your handling code here:
//        if(jSearch.getText().isEmpty()){
//            jButtonClearSearch.setVisible(false);
//            jTableCourse.setRowSorter(null);
//            LoadData();
//        }else{
//            Search(jSearch.getText().toString());
//            jButtonClearSearch.setVisible(true);
//        }
    }//GEN-LAST:event_jSearchKeyReleased

    private void jComboBoxCourseMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jComboBoxCourseMouseClicked
        // TODO add your handling code here:
//        if(jComboBoxCourse.getSelectedItem().toString().equals("All")){
//            LoadData();
//        }else if(jComboBoxCourse.getSelectedItem().toString().equals("Online")){
//            LoadData("Online");
//        }else{
//            LoadData("Onsite");
//        }
    }//GEN-LAST:event_jComboBoxCourseMouseClicked

    private void jComboBoxCourseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxCourseActionPerformed
        // TODO add your handling code here:
        if(jComboBoxCourse.getSelectedItem().toString().equals("All")){
            LoadData();
        }else if(jComboBoxCourse.getSelectedItem().toString().equals("Online")){
            LoadData("Online");
        }else{
            LoadData("Onsite");
        }
    }//GEN-LAST:event_jComboBoxCourseActionPerformed

    public void SearchTable(String text){
        DefaultTableModel faut = (DefaultTableModel) jTableCourse.getModel();
        TableRowSorter<DefaultTableModel> search = new TableRowSorter<>(faut);
        jTableCourse.setRowSorter(search);
        search.setRowFilter(RowFilter.regexFilter("(?i)"+text));
    }
    public void SearchAll(){
        if(jSearch.getText().isEmpty()) {
        jButtonClearSearch.setVisible(false);
        jTableCourse.setRowSorter(null);
        LoadData();
        } else {
        SearchTable(jSearch.getText().toString());
        jButtonClearSearch.setVisible(true);
        }
    }
    public void LoadData(){
        jComboBoxCourse.setSelectedIndex(0);
        DefaultTableModel model=new DefaultTableModel(){
            @Override
            public boolean isCellEditable(int row, int column) {
                return false;
            }
        };
        String columns[]=new String[]{"CourseID","CourseName"};
        for(String i:columns){
            model.addColumn(i);
        }
        for(CourseDTO i:courseBLL.getAllist()){
            Vector t=new Vector<>();
            t.add(i.getCourseID());
            t.add(i.getTitle());
            model.addRow(t);
        }
        jTableCourse.setModel(model);
    }
    
    public void LoadData(String text){
        DefaultTableModel model=new DefaultTableModel(){
            @Override
            public boolean isCellEditable(int row, int column) {
                return false;
            }
        };
        String columns[]=new String[]{"CourseID","CourseName"};
        for(String i:columns){
            model.addColumn(i);
        }
        for(CourseDTO i:courseBLL.getAllist(text)){
            Vector t=new Vector<>();
            t.add(i.getCourseID());
            t.add(i.getTitle());
            model.addRow(t);
        }
        jTableCourse.setModel(model);
    }
    public void LoadDataCourse(){
        DefaultComboBoxModel model=new DefaultComboBoxModel<>();
        model.addElement("All");
        model.addElement("Online");
        model.addElement("Onsite");
        jComboBoxCourse.setModel(model);
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonClearSearch;
    private javax.swing.JComboBox<String> jComboBoxCourse;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jSearch;
    private javax.swing.JTable jTableCourse;
    // End of variables declaration//GEN-END:variables
}
