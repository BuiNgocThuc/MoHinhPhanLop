/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package GUI.CourseResultJFrame;
import BLL.PersonBLL;
import BLL.StudentGradeBLL;
import DTO.StudentGradeDTO;
import java.util.Vector;
import javax.swing.JButton;
import javax.swing.JOptionPane;
import DTO.PersonDTO;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import javax.swing.JFrame;
import javax.swing.RowFilter;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;
/**
 *
 * @author MSI
 */
public class JFrameManageCourseResults extends javax.swing.JFrame {
    StudentGradeBLL studentGradeBLL=new StudentGradeBLL();
    PersonBLL personBLL=new PersonBLL();
    int CourseID;
    /**
     * Creates new form JFrameKhoaHocOnline
     */
    public JFrameManageCourseResults(int CourseID,String Title) {
        initComponents();
        jButtonClearSearch.setVisible(false);
        this.CourseID=CourseID;
        jTitle.setText(CourseID+" - "+Title);
        LoadData(CourseID);
        jSearch.getDocument().addDocumentListener(new DocumentListener() {
        @Override
        public void insertUpdate(DocumentEvent e) {
              SearchAll();
        }

        @Override
        public void removeUpdate(DocumentEvent e) {
              SearchAll();
        }

        @Override
        public void changedUpdate(DocumentEvent e) {
        // Xử lý khi có sự thay đổi trong thuộc tính của văn bản
        // (chẳng hạn như một loại thuộc tính được thay đổi, nhưng không phải nội dung văn bản)
        }
        });
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jSearch = new javax.swing.JTextField();
        jButtonClearSearch = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableKhoaHocOnline = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jTextGrade = new javax.swing.JTextField();
        jButtonSave = new javax.swing.JButton();
        jTextName = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jButtonDelete = new javax.swing.JButton();
        jButtonChange = new javax.swing.JButton();
        jTitle = new javax.swing.JLabel();
        jTextPersonID = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jButtonChange1 = new javax.swing.JButton();
        jButtonAdd = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jSearchActionPerformed(evt);
            }
        });
        jSearch.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jSearchKeyReleased(evt);
            }
        });

        jButtonClearSearch.setText("X");
        jButtonClearSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonClearSearchActionPerformed(evt);
            }
        });

        jTableKhoaHocOnline.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "STT", "PersonID", "FirstName", "LastName", "Grade"
            }
        ));
        jTableKhoaHocOnline.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableKhoaHocOnlineMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTableKhoaHocOnline);

        jLabel1.setText("Grade");

        jButtonSave.setText("Save");
        jButtonSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSaveActionPerformed(evt);
            }
        });

        jTextName.setEnabled(false);

        jLabel2.setText("Name");

        jButtonDelete.setText("Delete");
        jButtonDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDeleteActionPerformed(evt);
            }
        });

        jButtonChange.setText("Change");
        jButtonChange.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonChangeActionPerformed(evt);
            }
        });

        jTitle.setText("Title");

        jTextPersonID.setEnabled(false);

        jLabel4.setText("ID");

        jButtonChange1.setText("Details");
        jButtonChange1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonChange1ActionPerformed(evt);
            }
        });

        jButtonAdd.setText("Add");
        jButtonAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAddActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 843, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonClearSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 333, Short.MAX_VALUE))))
            .addGroup(layout.createSequentialGroup()
                .addGap(176, 176, 176)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButtonSave)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButtonDelete)
                        .addGap(12, 12, 12)
                        .addComponent(jButtonChange)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButtonChange1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButtonAdd))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTextPersonID, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jTextName, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextGrade, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(173, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonClearSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTitle))
                .addGap(46, 46, 46)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextGrade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextPersonID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 25, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonSave)
                    .addComponent(jButtonDelete)
                    .addComponent(jButtonChange)
                    .addComponent(jButtonChange1)
                    .addComponent(jButtonAdd))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 336, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSaveActionPerformed
        // TODO add your handling code here:
        String grade=jTextGrade.getText().toString();
        if(!grade.equals("") && (Double.parseDouble(grade)<=10d )){
            int EnrollmentID=studentGradeBLL.getEnrollment(CourseID,Integer.parseInt(jTextPersonID.getText().toString()));
            StudentGradeDTO studentGrade=new StudentGradeDTO();
            studentGrade.setCourseID(CourseID);
            studentGrade.setEnrollmentID(EnrollmentID);
            studentGrade.setGrade(Double.parseDouble(jTextGrade.getText().toString()));
            if(studentGradeBLL.updateGrade(studentGrade)){
                JOptionPane.showMessageDialog(rootPane,"Update Success!");
                Clear();
                LoadData(CourseID);
            }else{
                JOptionPane.showMessageDialog(rootPane,"Update Failed!");
            }
                    
        }
    }//GEN-LAST:event_jButtonSaveActionPerformed

    private void jTableKhoaHocOnlineMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableKhoaHocOnlineMouseClicked
        // TODO add your handling code here:
        int n=jTableKhoaHocOnline.getSelectedRow();
        if(n!=-1){
            jTextName.setText(jTableKhoaHocOnline.getValueAt(n, 2)+" "+jTableKhoaHocOnline.getValueAt(n, 3));
        jTextGrade.setText(jTableKhoaHocOnline.getValueAt(n, 4)+"");
        jTextPersonID.setText(jTableKhoaHocOnline.getValueAt(n, 1)+"");
        }
        System.out.println(n);
    }//GEN-LAST:event_jTableKhoaHocOnlineMouseClicked

    private void jButtonDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDeleteActionPerformed
        // TODO add your handling code here:
        int EnrollmentID=studentGradeBLL.getEnrollment(CourseID,Integer.parseInt(jTextPersonID.getText().toString()));
        if(Double.parseDouble(jTextGrade.getText().toString())!=0){
            int choice = JOptionPane.showConfirmDialog(rootPane, "Do You Want To Delete?", "Confirm", JOptionPane.YES_NO_OPTION);
            if(choice==JOptionPane.YES_OPTION){
            if(studentGradeBLL.deleteGrade(EnrollmentID)){
            JOptionPane.showMessageDialog(rootPane,"Delete Success!");
                Clear();
                LoadData(CourseID);
            }else{
                JOptionPane.showMessageDialog(rootPane,"Delete Failed!");
            }
        }
        }else{
            if(studentGradeBLL.deleteGrade(EnrollmentID)){
            JOptionPane.showMessageDialog(rootPane,"Delete Success!");
                Clear();
                LoadData(CourseID);
            }else{
                JOptionPane.showMessageDialog(rootPane,"Delete Failed!");
            }
        }   
    }//GEN-LAST:event_jButtonDeleteActionPerformed

    private void jButtonChange1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonChange1ActionPerformed
        // TODO add your handling code here:
        JFrameStudentInformationDetails details=new JFrameStudentInformationDetails(Integer.parseInt(jTextPersonID.getText().toString()));
        details.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        details.setVisible(true);
        Clear();
    }//GEN-LAST:event_jButtonChange1ActionPerformed

    private void jButtonChangeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonChangeActionPerformed
        // TODO add your handling code here:
        JFrameChangeCourse changeCourse=new JFrameChangeCourse(Integer.parseInt(jTextPersonID.getText().toString()),CourseID,jTextName.getText().toString(),jTitle.getText().toString(),Double.parseDouble(jTextGrade.getText().toString()));
        changeCourse.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        changeCourse.setLocationRelativeTo(null);
        changeCourse.setVisible(true);
        Clear();
        LoadData(CourseID);
    }//GEN-LAST:event_jButtonChangeActionPerformed

    private void jSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jSearchActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jSearchActionPerformed

    private void jSearchKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jSearchKeyReleased
        // TODO add your handling code here:
//        if(jSearch.getText().toString().equals("") || jSearch.getText().toString().equals(" ")){
//            jButtonClearSearch.setVisible(false);
//            jTableKhoaHocOnline.setRowSorter(null);
//            LoadData(CourseID);
//        }else{
//            Search(jSearch.getText().toString());
//            jButtonClearSearch.setVisible(true);
//        }
    }//GEN-LAST:event_jSearchKeyReleased

    private void jButtonClearSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonClearSearchActionPerformed
        // TODO add your handling code here:
        jSearch.setText("");
        LoadData(CourseID);
    }//GEN-LAST:event_jButtonClearSearchActionPerformed

    private void jButtonAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAddActionPerformed
        // TODO add your handling code here:
        JFrameListStudent students = new JFrameListStudent(CourseID, jTitle.getText());
        students.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        students.setVisible(true);
        Clear();
    }//GEN-LAST:event_jButtonAddActionPerformed

    public void SearchTable(String txt) {
        DefaultTableModel faut = (DefaultTableModel) jTableKhoaHocOnline.getModel();
        TableRowSorter<DefaultTableModel> search = new TableRowSorter<>(faut);
        jTableKhoaHocOnline.setRowSorter(search);
        search.setRowFilter(RowFilter.regexFilter("(?i)"+txt));
    }
    public void SearchAll(){
        if(jSearch.getText().isEmpty()){
            jButtonClearSearch.setVisible(false);
            jTableKhoaHocOnline.setRowSorter(null);
            LoadData(CourseID);
        }else{
            SearchTable(jSearch.getText().toString());
            jButtonClearSearch.setVisible(true);
        }
    }
    
    public void LoadData(int CourseID){
        String columns[]=new String[]{"STT","PersonID","FirstName","LastName","Grade"};
        DefaultTableModel model=new DefaultTableModel(){
            @Override
            public boolean isCellEditable(int row, int column) {
                return false;
            }
        };
        for(String i:columns){
            model.addColumn(i);
        }
        int stt=0;
        for(StudentGradeDTO i:studentGradeBLL.getAllList(CourseID)){
            Vector t=new Vector();
            t.add(stt+=1);
            t.add(i.getStudentID());
            PersonDTO person=personBLL.detailsPerson(i.getStudentID());
            t.add(person.getFirstName());
            t.add(person.getLastName());
            t.add(i.getGrade());
            model.addRow(t);
        }
        jTableKhoaHocOnline.setModel(model);
    }
    public void Clear(){
        jTextGrade.setText("");
        jTextName.setText("");
        jTextPersonID.setText("");
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonAdd;
    private javax.swing.JButton jButtonChange;
    private javax.swing.JButton jButtonChange1;
    private javax.swing.JButton jButtonClearSearch;
    private javax.swing.JButton jButtonDelete;
    private javax.swing.JButton jButtonSave;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jSearch;
    private javax.swing.JTable jTableKhoaHocOnline;
    private javax.swing.JTextField jTextGrade;
    private javax.swing.JTextField jTextName;
    private javax.swing.JTextField jTextPersonID;
    private javax.swing.JLabel jTitle;
    // End of variables declaration//GEN-END:variables
}

